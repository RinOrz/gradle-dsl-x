import com.meowool.sweekt.removeBlanks
import com.meowool.sweekt.substringAfter
import io.kotest.core.spec.style.StringSpec
import io.kotest.matchers.shouldBe
import io.kotest.matchers.string.shouldContain

/**
 * @author 凛 (https://github.com/RinOrz)
 */
class BuildScriptTests : StringSpec({

  fun String.removeLineBreaks() = replace("\n", "").replace("\r", "").replace("\r\n", "")

  val path = "deps.jar"
  "find" {
    val kts = """
      pluginManagement {
        repositories {
          gradlePluginPortal()
        }
      }

      buildscript {
        configurations.all {
          resolutionStrategy { cacheChangingModulesFor(0, TimeUnit.SECONDS) }
        }
      }

      include(":core")
    """.trimIndent()
    Regex("buildscript\\{.*}").find(kts.removeLineBreaks().removeBlanks())!!.value shouldBe
      "buildscript{configurations.all{resolutionStrategy{cacheChangingModulesFor(0,TimeUnit.SECONDS)}}}"
  }

  "l" {
    val kts = """
      pluginManagement {
        repositories {
          gradlePluginPortal()
        }
      }

      buildscript {
        configurations.all {
          resolutionStrategy { cacheChangingModulesFor(0, TimeUnit.SECONDS) }
        }
      }

      include(":core")
    """.trimIndent()
  }

  "check classpath exists" {
    val kts = """
      buildscript 
      {
      dependencies.classpath(...)
        dependencies {
          classpath(
          files($path)
          )
        }
        configurations.all {
        }
      }
    """.trimIndent()
    Regex("Foo\\{.*}").find(kts.removeLineBreaks().removeBlanks())!!.value.apply {
      shouldContain("classpath(files($path))")
      shouldContain("classpath(...)")
    }
  }


  "add" {
    val kts = """
      pluginManagement {}
      buildscript {
        configurations.all {
          resolutionStrategy { cacheChangingModulesFor(0, TimeUnit.SECONDS) }
        }
      }
      include()
    """.trimIndent()

    insertClasspath(kts, "dependencies.classpath(files($path))").removeLineBreaks().removeBlanks() shouldBe """
      pluginManagement {}
      buildscript {
      !! 请手动调整下面代码的缩进或者位置，然后删除这些警告 // 由这个项目中引用的 meowool-dependencies-generator 生成
      !! Please manually adjust the indentation or position here, and then remove these warnings // this is the classpath generated by meowool-dependencies-generator
      !! for more details: https://github.com/meowool-toolkit/gradle-dsl-x/tree/master/dependencies/generator
      dependencies.classpath(files(deps.jar))
        configurations.all {
          resolutionStrategy { cacheChangingModulesFor(0, TimeUnit.SECONDS) }
        }
      }
      include()
    """.removeLineBreaks().removeBlanks()
  }
})